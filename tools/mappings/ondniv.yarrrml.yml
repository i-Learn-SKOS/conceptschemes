prefixes:
  ondniv: "http://ilearn.ilabt.imec.be/vocab/ondniv/"
  skos: "http://www.w3.org/2004/02/skos/core#"
  ilearn: "http://semweb.mmlab.be/ns/ilearn#"
  lom: "http://semweb.mmlab.be/ns/lom#"
  idlab-fn: "http://example.com/idlab/function/"
  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"

sources:
  # paths are relative to the ../tools directory; see ../tools/map.sh
  helper: ['mappings/helper.csv~csv']
  niveaus: ['../input/onderwijsniveaus/onderwijsniveaus-prepared.csv~csv']

mappings:
  scheme:
    sources:
      - helper
    s: ondniv:_scheme
    po:
      - [a, skos:ConceptScheme]
      - [skos:prefLabel, "onderwijsniveaus", nl~lang]
    condition:
      function: idlab-fn:equal
      parameters:
        - [grel:valueParameter, $(Mapping)]
        - [grel:valueParameter2, "scheme"]
  niveau:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - [a, skos:Concept]
      - [skos:inScheme, ondniv:_scheme~iri]
      - [skos:topConceptOf, ondniv:_scheme~iri]
      - [skos:prefLabel, $(Onderwijsniveau), nl~lang]
#      - [skos:notation, niv-$(Id), xsd:string]
    condition:
      function: idlab-fn:equal
      parameters:
        - [grel:valueParameter, $(Mapping)]
        - [grel:valueParameter2, "niveau"]
  subniveau:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - [a, skos:Concept]
      - [skos:inScheme, ondniv:_scheme~iri]
      - [skos:broader, ondniv:$(ParentId)~iri]
      - [skos:prefLabel, $(Onderwijssubniveau), nl~lang]
#      - [skos:notation, sbn-$(Id), xsd:string]
    condition:
      function: idlab-fn:equal
      parameters:
        - [grel:valueParameter, $(Mapping)]
        - [grel:valueParameter2, "subniveau"]
  graad:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - [a, skos:Concept]
      - [skos:inScheme, ondniv:_scheme~iri]
      - [skos:broader, ondniv:$(ParentId)~iri]
      - [skos:prefLabel, $(jaar/graad), nl~lang]
#      - [skos:notation, grd-$(Id), xsd:string]
    condition:
      function: idlab-fn:equal
      parameters:
        - [grel:valueParameter, $(Mapping)]
        - [grel:valueParameter2, "graad"]
  finaliteit:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - [a, skos:Concept]
      - [skos:inScheme, ondniv:_scheme~iri]
      - [skos:broader, ondniv:$(ParentId)~iri]
      - [skos:prefLabel, $(Finaliteit), nl~lang]
#      - [skos:notation, fin-$(Id), xsd:string]
    condition:
      function: idlab-fn:equal
      parameters:
        - [grel:valueParameter, $(Mapping)]
        - [grel:valueParameter2, "finaliteit"]
  onderwijsvorm:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - [a, skos:Concept]
      - [skos:inScheme, ondniv:_scheme~iri]
      - [skos:broader, ondniv:$(ParentId)~iri]
      - [skos:prefLabel, $(Onderwijsvorm), nl~lang]
#      - [skos:notation, vrm-$(Id), xsd:string]
    condition:
      function: idlab-fn:equal
      parameters:
        - [grel:valueParameter, $(Mapping)]
        - [grel:valueParameter2, "onderwijsvorm"]
  altlabel:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - p: skos:altLabel
        o:
          value: $(altLabel)
          language: nl
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(altLabel)]
        - [grel:valueParameter2, ""]
  altlabel2:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - p: skos:altLabel
        o:
          value: $(altLabel2)
          language: nl
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(altLabel2)]
        - [grel:valueParameter2, ""]
  eduContext:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - p: lom:educationalContext
        o:
          value: $(IEEE LOM)
          language: en
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(IEEE LOM)]
        - [grel:valueParameter2, ""]
  typicalAgeRange:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - p: ilearn:typicalAgeRange
        o: $(leeftijd)
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(leeftijd)]
        - [grel:valueParameter2, ""]
  hasCurriculum:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - p: ilearn:hasCurriculum
        o: $(curriculum)~iri
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(curriculum)]
        - [grel:valueParameter2, ""]
  hasCurriculum2:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - p: ilearn:hasCurriculum
        o: $(curriculum2)~iri
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(curriculum2)]
        - [grel:valueParameter2, ""]
  hasCurriculum3:
    sources:
      - niveaus
    s: ondniv:$(Id)
    po:
      - p: ilearn:hasCurriculum
        o: $(curriculum3)~iri
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(curriculum3)]
        - [grel:valueParameter2, ""]
  member:
    sources:
      - niveaus
    s: http://ilearn.ilabt.imec.be/vocab/elem/ondniv
    po:
      - [skos:member, ondniv:$(Id)~iri]
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(Id)]
        - [grel:valueParameter2, ""]
  member-additional:
    sources:
      - niveaus
    s: http://ilearn.ilabt.imec.be/vocab/elem/ondniv-$(Mapping)
    po:
      - [skos:member, ondniv:$(Id)~iri]
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(Id)]
        - [grel:valueParameter2, ""]
